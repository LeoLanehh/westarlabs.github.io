<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Westar</title><link>/</link><description>Recent content on Westar</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Filecoin 基本原理解读</title><link>/blog/file_coin/</link><pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate><guid>/blog/file_coin/</guid><description>就在几天前，Protocol Labs 启动了 Filecoin 测试网，预计2020年一季度上线主网。新闻一出来，当年这个红极一时的明星项目又引起圈内一阵反响。大家所熟知的 IPFS 也是由 Protocol Labs 主导开发，该协议已经稳定运行几年了。IPFS 是一个点对点的分布式文件系统，但是光有 IPFS 是不够的，缺少必要的激励机制，整个系统无法形成有效的闭环，构建在 IPFS 之上的 Filecoin 就是为了解决这一问题。它提供了一个供需市场，存储提供者和存储使用方可以通过竞价的模式去达成交易，最终，通过市场来调节存储的成本，使用方能够根据价格选择速度、冗余程度和成本。在这篇文章中，我们聊聊 Filecoin paper 是怎么做的。
基本构造 在介绍具体的交互之前，先介绍 Filecoin 的几个关键概念。
参与方 参与 Filecoin 协议的有客户端(Client)，存储矿工（Storage Miner），检索矿工（Retrieval Miner）。
客户端需要 1. 付钱给存储旷工来存储自己的数据，2. 付钱给检索矿工来获取数据。 存储矿工向网络提供数据存储，保存来自客户端的数据，并不断的向链证明自己确实保存了客户的数据。 检索矿工向客户端提供数据获取的服务。 存储旷工和检索矿工组成了 Filecoin 的网络，并不断生成账本，构建 Filecoin 区块链。
数据结构 Pieces：用户的数据可能会被分成多个 pieces，并且不同的 pieces 可能由不同的存储矿工保存。 Sectors：sector 本意是扇区，这里指代的是存储矿工节点上的一部分存储空间。存储矿工需要先向链声明自己的 sectors，然后才可以对外提供服务，将客户端的 pieces 存储在 sectors 中。 Pledge：存储矿工在向链声明自己的 sectors，还需要抵押一部分的资金，pledge 用来保存要声明的 sector 大小以及对应的抵押的资金。（资金就是 Filecoin 代币） AllocationTable：分配表保存了 pieces 和 sectors 和对应关系。 Orders：Filecoin 中的参与方想要提供服务和请求使用服务时，都会发起一个 order。客户端的order 称作 bid order，存储矿工和检索矿工的order 叫做 ask order。 Orderbook：订单记录保存了一系列的订单。 更详细的说明可以参考 Filecoin paper 的 4.</description></item><item><title>2019 12 07 Westar Tech Meetup</title><link>/blog/meetup/20191207/</link><pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate><guid>/blog/meetup/20191207/</guid><description>2019 12 07 Westar Tech Meetup 2019年12月07日，Westar实验室组织了第一次技术Meetup，本次Meetup聚焦在Rust网络开发方面，包含三个主题，分别是Westar实验室研究员方圆带来的《深⼊入浅出Tokio异步编程》,Westar实验室研究员成锁元带来的《Rust Web框架⽐比较》，PingCAP团队资深开发者沈泰宁带来的《Rust network programming:Futures and gRPC》。
三位讲师的分享引起参会者的学习热情，并在会后和讲师深入讨论了Rust网络开发相关的问题。</description></item><item><title>Sirius Protocol</title><link>/projects/sirius/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/sirius/</guid><description> Sirius Protocol 去中心化、安全、多方、及时的二层支付协议 -- Hub模型 Hub内任意用户之间可以轻松支付 -- -- 安全机制 继承一层的安全特性，同时包含协议本身的安全机制 -- -- 状态通道 拥有及时支付、低交易费等状态通道的特性 -- Hub模型 Sirius基于安全的Hub模型设计，任何用户只需要通过链上充值的方式加入到Hub中，就能轻松实现跟Hub中其他用户进行安全快捷的二层转账。Hub提供了完善的链上容错和监督机制，Hub合约既能很好的监督owner，防止owner作弊，同时也能很好的起到仲裁的作用，处理用户与用户、用户与owner之间的分歧。除此之外，用户也能非常方便的提款、退出Hub。 安全机制 Sirius有一套基于一层的、成熟的安全机制。首先，Sirius是基于Ethereum生态的二层协议，在确定的时间内，owner必须将Hub的二层状态上链，Hub合约会进行严格的状态校验，否则，都将导致Hub冻结，保障用户能顺利取回属于自己的token。其次，诚实用户可以在任何时刻，将Proof与Hub的状态进行比较，及时发现风险；Hub使用延迟到账的方式，邪恶用户通过串通owner或者提交过期Proof等手段偷钱，均可以及时发现。 状态通道 Sirius能及时便捷的完成多用户之间的小额支付。Sirius实现了一个二层的状态通道，拥有状态通道的所有优点，能非常及时的完成Hub内用户之间的小额支付，无需链上等待，及时到账，同时降低交易费用，提高了吞吐。</description></item><item><title>Stargate Protocol</title><link>/projects/stargate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/stargate/</guid><description> Stargate Protocol Starcoin 的二层协议实现 Starcoin Starcoin 是一个去中心化的，基于工作量证明的区块链一层系统，支持 Move 合约。Move 合约专为数字资产设计，安全，可扩展性强，基于 Move 合约自定义的资产和链的原生资产以及合约的状态都属于一种持久化资源(Resource)，是链的一等公民，共享主链的安全以及生态，以及统一的编程接口。一层的目标是去中心化，安全以及为上层的区块链协议提供基础服务。 Stargate Stargate 是 Starcoin 的二层协议实现，实现了通用的状态通道，目标是提供扩展性以及便捷性。一二层结合可以实现合约状态在一层和二层之间安全无缝转移以及执行合约。任何一层的资源，都可以转移到二层通道上来，降低交易费用，提高吞吐。由于二层支持智能合约，所以 DApp 可以直接在二层运行，从而解决 DApp 受一层的吞吐而无法扩展的难题。 Stargate 的另外一个改进是通道的托管机制。在这种模式下，用户可以将自己的通道托管给某个节点，该节点代理用户在二层的 P2P 网络中的角色，以及监控通道对方的行动，一旦需要用户操作，则通知用户上线接入网络进行处理。这样一方面没有安全性问题，另外一方面也降低了二层节点的维护成本，用户无需维护一个长期在线的二层节点。 项目正在持续开发中…</description></item><item><title>Thor Protocol</title><link>/projects/thor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/thor/</guid><description> Thor Protocol 闪电网络上的智能合约和仲裁服务 -- 基于比特币网络上的区块链二层协议实现 -- -- 支持智能合约 -- -- 支持智能合约的仲裁 -- 关于Thor Protocol / 雷神 SiThor 在闪电网络之上实现了一个比特币网络的二层协议，用户使用高级编程语言(WebAssembly)去实现智能合约。用户通过 Thor 合约所定义的接口(ABI)，可以方便的进行应用的开发和部署。另外通过 Thor 的仲裁服务，去解决合约的信任问题。 该项目属于 Westar 在区块链二层的一个探索性研发，其为比特币网络增加了智能合约的支持。我们在闪电网络之上，结合其哈希时间锁(HTLC)机制，实现了仲裁服务。使得用户的智能合约能够去心化并安全的执行。用户通过向仲裁服务抵押 Token，来创建一个交互执行合约的通道，并且在发生争议的时候发送自己的证据 (challenging) 给仲裁服务，仲裁服务会对合约进行校验以及重放。这样解决了去中心化应用的信任和安全问题。 -- 原理展示-- -- 查看展示-- --</description></item></channel></rss>